# Basic vars
set shell zsh
set shellopts '-euy'
set ifs "\n"
set filesep "\n"  # default already
set scrolloff 10
set icons true #Read ~/.config/lf/icons
set cursorpreviewfmt "\033[7m" #pre-r29 behavior
set sortby time #mtime
set reverse true #Show newest files first
set incsearch true
set incfilter true
set period 1 #Set the interval in seconds for periodic checks of directory updates
set autoquit on #Automatically quit server when there are no clients left connected
set mouse true #Send mouse events as input
set preview true
set previewer ~/.config/lf/previewSandbox.sh
set cleaner ~/.config/lf/preview_clean.py

# cmds/functions
cmd on-cd &{{
    #Show current directory in window title
    printf "\033]0; %s - lf\007" "$(pwd | sd "$HOME" "~")" >/dev/tty
}}
cmd open ${{
    opener.py "$f"
}}
cmd open-with ${{
    opener.py -i "$f"
}}
cmd mkdir ${{
    mkdir -p "$(echo $* | tr ' ' '\ ')"
}}
cmd trash &{{
    if [[ "$XDG_CURRENT_DESKTOP" == "KDE" ]]; then
        kioclient5 move $fx trash:/ &>>"$XDG_RUNTIME_DIR/trash.log"
    else
        trash-put $fx
    fi
}}
cmd z %{{
    result="$(zoxide query --exclude $PWD $@)"
    lf -remote "send $id cd $result"
}}
cmd zi ${{
    result="$(zoxide query -i)"
    lf -remote "send $id cd $result"
}}
cmd yank-name ${{
    result="$(basename "$f")"
    printf "%s" "${result}" | wl-copy
}}
cmd extract ${{
    set -f
    atool -x $f
}}

# Warn about nested instances
%[ $LF_LEVEL -eq 1 ] || echo "Warning: You're in a nested lf instance!"

# CoW (with GNU Coreutils)
cmd paste %{{
    set -- $(cat ~/.local/share/lf/files)
    mode="$1"
    shift
    if [[ "$*" != "" ]]; then
        case "$mode" in
            copy) cp -rv --backup=numbered -- "$@" .;;
            move) mv -v --backup=numbered -- "$@" .;;
        esac
        rm ~/.local/share/lf/files
        lf -remote "send clear"
    else
        exit 0
    fi
}}

# Reload
cmd reload-config ${{
    lf -remote "send $id source ~/.config/lf/lfrc"
}}
map <c-r> :reload-config; reload

# Bindings
map g top
map <space> :toggle
map <esc> :unselect; clear
map DD trash
map <delete> trash
map E extract
map y
map yy copy
map x cut
map p paste
map yn yank-name
map yp $printf "%s" "$f" | wl-copy #copy full path of the current file
map <c-n> push :mkdir<space>
map <c-f> $lf -remote "send $id select \"$(fzf)\""
map <backspace> set hidden! #<backspace> is ctrl-h, <backspace2> is backspace
map <enter> shell
map o open
map O open-with

map r rename
map i rename
map R $rn "$PWD" #bulkrename
map I :rename; cmd-home
map A :rename; cmd-end
map c :rename; cmd-delete-home
map C :rename; cmd-end; cmd-delete-home
