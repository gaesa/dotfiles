#!/usr/bin/zsh

# Set env for some directories
function env_on_chdir {
    # Set GIT_DIR and GIT_WORK_TREE when at HOME
    if [[ "${PWD}" == "${HOME}" ]]; then
        export GIT_DIR="${XDG_DATA_HOME}/yadm/repo.git"
        # GIT_WORK_TREE must be set on server, I don't know why
        export GIT_WORK_TREE="${HOME}"
    else
        if [[ "${GIT_DIR}" == "${XDG_DATA_HOME}/yadm/repo.git" ]]; then
            unset GIT_DIR
            unset GIT_WORK_TREE
        else
            true
        fi
    fi
}
add-zsh-hook -Uz chpwd() {env_on_chdir}
# the cost of convenience: fix for 'git clone'
# ERROR message:
# fatal: working tree '/home/user' already exists
function paru {
    if [[ "${PWD}" == "${HOME}" ]]; then
        unset GIT_DIR
        unset GIT_WORK_TREE
        command paru "$@"
    else
        command paru "$@"
    fi
}
function git { #use `g` alias instead of duplicating this function to prevent uncompleted shell completion
    if [[ "${PWD}" == "${HOME}" ]]; then
        if [[ "$1" == "clone" ]] || [[ "$1" == "cl" ]]; then
            unset GIT_DIR
            unset GIT_WORK_TREE
            command git "$@"
        else
            command git "$@"
        fi
    else
        command git "$@"
    fi
}

# Make compinit automatically find new executables in the $PATH
# On-demand rehash
zshcache_time="$(date +%s%N)"
autoload -Uz add-zsh-hook
rehash_precmd() {
    if [[ -a /var/cache/zsh/pacman ]]; then
        local paccache_time="$(date -r /var/cache/zsh/pacman +%s%N)"
        if (( zshcache_time < paccache_time )); then
            rehash
            zshcache_time="$paccache_time"
        fi
    fi
}
add-zsh-hook -Uz precmd rehash_precmd
