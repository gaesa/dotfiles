#!/usr/bin/zsh

#-----Git-------------
#---------------------
_set_git_env() {
    set_dir() {
        if [[ -v GIT_DIR ]]; then
            if [[ "${GIT_DIR}" != "${XDG_DATA_HOME}/yadm/repo.git" ]]; then
                export GIT_DIR="${XDG_DATA_HOME}/yadm/repo.git"
                unset -f set_dir
            else
                unset -f set_dir
            fi
        else
            export GIT_DIR="${XDG_DATA_HOME}/yadm/repo.git"
            unset -f set_dir
        fi
    }

    set_work_tree() {
        if [[ -v GIT_WORK_TREE ]]; then
            if [[ "${GIT_WORK_TREE}" != "${HOME}" ]]; then
                # GIT_WORK_TREE must be set on server, I don't know why
                export GIT_WORK_TREE="${HOME}"
                unset -f set_work_tree
            else
                unset -f set_work_tree
            fi
        else
            export GIT_WORK_TREE="${HOME}"
            unset -f set_work_tree
        fi
    }

    set_dir
    set_work_tree
}

_clr_git_env() {
    clr_dir() {
        if [[ -v GIT_DIR ]]; then
            if [[ "${GIT_DIR}" == "${XDG_DATA_HOME}/yadm/repo.git" ]]; then
                unset GIT_DIR
                unset -f clr_dir
            else
                unset -f clr_dir
            fi
        else
            unset -f clr_dir
        fi
    }

    clr_work_tree() {
        if [[ -v GIT_WORK_TREE ]]; then
            if [[ "${GIT_WORK_TREE}" == "${HOME}" ]]; then
                unset GIT_WORK_TREE
                unset -f clr_work_tree
            else
                unset -f clr_work_tree
            fi
        else
            unset -f clr_work_tree
        fi
    }

    clr_dir
    clr_work_tree
}

_git_pre_exec() {
    typeset -A git_cmds=(
        g true
        git true
        lazygit true
    )
    typeset -A options=(
        cl true
        clone true
    )

    # There is no consistent, convenient and reliable way
    # to convert strings to lists in bash or zsh
    local cmd=${1%% *} # $1 here would be treated as a complete command string
    local remainder="${1#* }"
    local option="${remainder%% *}"

    if [[ -v git_cmds["${cmd}"] && "${git_cmds[$cmd]}" == true ]]; then
        if [[ "${PWD}" == "${HOME}" ]]; then
            if [[ -v option ]]; then
                if [[ -v options["${option}"] && "${options[$option]}" == true ]]; then
                    _clr_git_env
                else
                    _set_git_env
                fi
            else
                _set_git_env
            fi
        else
            _clr_git_env
        fi
    else
        _clr_git_env
    fi
}
preexec_functions+=(_git_pre_exec)

# Set env for some directories
# Make git completion work at HOME
_git_env_on_chdir() {
    # Set GIT_DIR and GIT_WORK_TREE when at HOME
    if [[ "${PWD}" == "${HOME}" ]]; then
        _set_git_env
    else
        _clr_git_env
    fi
}
precmd_functions+=(_git_env_on_chdir)

#------Pyvenv---------
#---------------------
_auto_pyvenv() {
    if [[ -n "${VIRTUAL_ENV}" && "${PWD}" != "$VIRTUAL_ENV"* ]]; then
        deactivate
    fi
    if [[ -z "$VIRTUAL_ENV" && -f "${PWD}/bin/activate" ]]; then
        source "${PWD}/bin/activate"
    fi
}
chpwd_functions+=_auto_pyvenv
