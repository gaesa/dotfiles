#!/usr/bin/env python3
from sys import exit as sys_exit, argv
from subprocess import run
from os.path import isdir, join
from shutil import move
from os import getenv, listdir, remove, chmod, stat
from stat import S_IMODE
from uuid import uuid4


def sorted_name_list(root, names):
    dirs = []
    files = []
    for name in names:
        if isdir(join(root, name)):
            dirs.append(name)
        else:
            files.append(name)
    return sorted(files) + sorted(dirs)


def mktemp(prefix=""):
    if prefix != "":
        name = f"{prefix}-{str(uuid4())}"
    else:
        name = str(uuid4())
    dir = getenv("XDG_RUNTIME_DIR", "/tmp")
    path = join(dir, name)
    open(path, "w").close()

    permission = oct(S_IMODE(stat(path).st_mode))
    if permission != 0o600:
        chmod(path, 0o600)
        return path
    else:
        return path


def save_name_list(name_list, name_record):
    with open(name_record, "w") as f:
        f.write("\n".join(name_list))


def rename_edit(name_record):
    editor = getenv("EDITOR", "nvim")
    run([editor, name_record], check=True)


def rename_move(dir, name_list, name_record):
    with open(name_record, "r") as f:
        lines = f.read().splitlines()
    if len(lines) == len(name_list):
        for i in range(len(lines)):
            if lines[i] != name_list[i]:
                src_path = join(dir, name_list[i])
                if lines[i] == "":
                    run(["trash", src_path], check=True)
                else:
                    if lines[i][0] in {" ", "-"} and lines[i][1:] == name_list[i]:
                        run(["trash", src_path], check=True)
                    else:
                        move(src_path, join(dir, lines[i]))
    else:
        print(
            "WARNING: Some lines have been deleted, "
            "this operation is not allowed\n"
            "But don't panic, your files are safe "
            "and haven't been modified\n"
            "Please try again with this in mind"
        )
        remove(name_record)
        sys_exit(1)


def main():
    if len(argv) < 2:
        print("No directory is given")
    else:
        for path in argv[1:]:
            if isdir(path):
                name_list = sorted_name_list(path, listdir(path))
                name_record = mktemp(prefix="rename")
                save_name_list(name_list, name_record)

                rename_edit(name_record)
                rename_move(path, name_list, name_record)

                remove(name_record)
            else:
                print(f"The given directory '{path}' doesn't exist")


if __name__ == "__main__":
    main()
