#!/usr/bin/env python3
from argparse import ArgumentParser
from os import getenv, listdir, remove
from os.path import isdir, join
from shutil import move
from subprocess import run
from sys import stderr

from my_utils.iters import natsort, partition

from mktemp import mktemp  # pyright: ignore [reportMissingImports]


def sorted_name_list(root: str, names: list[str]) -> list[str]:
    dirs, files = partition(lambda name: isdir(join(root, name)), names, lazy=False)
    return sorted(dirs, key=natsort) + sorted(files, key=natsort)


def save_name_list(name_list, name_record):
    with open(name_record, "w") as f:
        f.write("\n".join(name_list))


def rename_edit(name_record):
    editor = getenv("EDITOR", "nvim")
    run([editor, name_record], check=True)


def rename_move(dir, name_list, name_record, _symbols_deleted={" ", "-"}):
    with open(name_record, "r") as f:
        lines = f.read().splitlines()
    if len(lines) == len(name_list):
        for i in range(len(lines)):
            if lines[i] != name_list[i]:
                src_path = join(dir, name_list[i])
                if lines[i] == "":
                    run(["trash", src_path], check=True)
                else:
                    if lines[i][0] in _symbols_deleted and lines[i][1:] == name_list[i]:
                        run(["trash", src_path], check=True)
                    else:
                        move(src_path, join(dir, lines[i]))
    else:
        remove(name_record)
        mes = (
            "WARNING: Some lines have been deleted, "
            "this operation is not allowed\n"
            "But don't panic, your files are safe "
            "and haven't been modified\n"
            "Please try again with this in mind"
        )
        raise SystemExit(mes)


def get_args() -> list[str]:
    parser = ArgumentParser(description="Process directories.")
    parser.add_argument(
        "directories", type=str, nargs="+", help="directories to be processed"
    )
    return parser.parse_args().directories


def main():
    dirs = get_args()
    for path in dirs:
        if isdir(path):
            name_list = sorted_name_list(path, listdir(path))
            name_record = mktemp(prefix="rename")
            save_name_list(name_list, name_record)

            rename_edit(name_record)
            rename_move(path, name_list, name_record)

            remove(name_record)
        else:
            print(f"The given directory '{path}' doesn't exist", file=stderr)


if __name__ == "__main__":
    main()
