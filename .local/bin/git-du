#!/usr/bin/env python3
from subprocess import run
from os.path import join, isdir
from os import getenv
from sys import exit as sys_exit, argv


def get_work_tree():
    work_tree = run(
        ["git", "rev-parse", "--show-toplevel"],
        capture_output=True,
        text=True,
        check=True,
    ).stdout.rstrip()
    return work_tree


def get_tracked_files(work_tree):
    tracked_files = (
        run(
            ["git", "ls-tree", "--full-tree", "--name-only", "-r", "HEAD"],
            capture_output=True,
            text=True,
            check=True,
        )
        .stdout.rstrip()
        .splitlines()
    )
    for i in range(0, len(tracked_files)):
        tracked_files[i] = join(work_tree, tracked_files[i])
    return tracked_files


def get_git_dir(work_tree):
    git_dir = join(work_tree, ".git")
    if isdir(git_dir):
        return git_dir
    else:
        GIT_DIR = getenv("GIT_DIR")
        if GIT_DIR is not None:
            return GIT_DIR
        else:
            print("Where is your path to the repository?")
            sys_exit(1)


def main():
    work_tree = get_work_tree()
    tracked_files = get_tracked_files(work_tree)

    if len(argv) > 1:
        if argv[1] in {"--all", "-a"}:
            git_dir = get_git_dir(work_tree)
            run(["dust", *tracked_files, git_dir])
        else:
            print("Unrecogized argument")
            sys_exit(1)
    else:
        run(["dust", *tracked_files])


if __name__ == "__main__":
    main()
