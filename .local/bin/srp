#!/usr/bin/bash
set -Eeuo pipefail
# set -x

# ls function
function fun_ls {
    if (( "$#" == 1 )); then
        ls -F --color=auto "${HOME}"/.local/bin
    else
        for arg in "${@:2}"; do
            ls -F --color=auto "${HOME}"/.local/bin/"${arg}"
        done
    fi
}

# cat function
function fun_cat {
    for arg in "${@:2}"; do
        cat "${HOME}"/.local/bin/"${arg}"
        # produce dividing line if it is not the last parameter
        if [[ "${arg}" != "${*: -1}" ]]; then
            for (( i=0; i<50; i++ )); do
                printf "%c" "-"
            done
            printf "\n\n"
        fi
    done
}

# fd function
function fun_fd {
    fd --type f "$2" "${HOME}"/.local/bin/ -X printf '%s\n' '{/}'
}

# rm function
function fun_rm {
    for arg in "${@:2}"; do
        trash "${HOME}"/.local/bin/"${arg}"
    done
}

# mv function
function fun_mv {
    mv -i "${HOME}"/.local/bin/"$2" "${HOME}"/.local/bin/"$3"
}

# line count function
function fun_lc {
    for arg in "${@:2}"; do
        wc -l "${HOME}"/.local/bin/"${arg}"
    done
}

# 'shellcheck' function
function fun_shck {
    for arg in "${@:2}"; do
        shellcheck -x -o all "${HOME}"/.local/bin/"${arg}"
    done
}

# edit function
function fun_edit {
    array=("$@")
    len=${#array[@]}
    for (( i=0; i<len; i++ )); do
        array[i]="${HOME}/.local/bin/${array[${i}]}"
    done
    #nvim -p ${array[@]}
    nvim -O ${array[@]}
    for arg in "$@"; do
        if [[  -f "${HOME}"/.local/bin/"${arg}" ]]; then
            # if the file exists, then check its permission
            permission="$(stat -c %a "${HOME}"/.local/bin/"${arg}")"
            if (( permission != 744 )); then
                chmod 744 "${HOME}"/.local/bin/"${arg}"
            fi
        fi
    done
}

if (( "$#" < 1 )); then
    printf "Missing argument for %s\n" "$0"
    exit 1
fi

case "$1" in
    ls)
        fun_ls "$@";;
    cat|fd|rm|lc|shck)
        if (( "$#" < 2 )); then
            printf "Missing argument for %s\n" "$1"
            exit 1
        fi;;&
    cat)
        fun_cat "$@";;
    fd)
        fun_fd "$@";;
    rm)
        fun_rm "$@";;
    mv)
        if (( "$#" < 3 )); then
            printf "Missing argument for %s\n" "$1"
            exit 1
        fi
        if (( "$#" > 3)); then
            printf "To many arguments for %s\n" "$1"
            exit 2
        fi
        fun_mv "$@";;
    lc)
        fun_lc "$@";;
    shck)
        fun_shck "$@";;
    *)
        fun_edit "$@";;
esac
